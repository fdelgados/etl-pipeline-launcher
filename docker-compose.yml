version: "3"

services:
  database-es:
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
    container_name: web-corpus-builder-database-es
    hostname: web-corpus-es
    image: mysql-server:latest
    networks:
      web_corpus_builder:
        ipv4_address: 10.5.0.3
    volumes:
      - ./.mysql-data-es:/var/lib/mysql/
    ports:
      - "33060:3306"
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=HyMn4q6UR6wa
    command: --default-authentication-plugin=mysql_native_password

  database-it:
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
    container_name: web-corpus-builder-database-it
    hostname: web-corpus-it
    image: mysql-server:latest
    networks:
      web_corpus_builder:
        ipv4_address: 10.5.0.10
    volumes:
      - ./.mysql-data-it:/var/lib/mysql/
    ports:
      - "33006:3306"
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=HyMn4q6UR6wa
    command: --default-authentication-plugin=mysql_native_password

  application:
    build:
      context: .
      dockerfile: ./docker/application/Dockerfile
    depends_on:
      - database-es
      - database-it
      - rabbitmq
      - redis
      - mailhog
      - mongo
      - mongo-express
    networks:
      web_corpus_builder:
        ipv4_address: 10.5.0.2
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - FLASK_APP=shared/infrastructure/entrypoint/flask/start.py
      - PYTHONUNBUFFERED=1
    ports:
      - "5000:5000"

  worker:
    build:
      context: .
      dockerfile: ./docker/application/Dockerfile
    command: /var/www/bin/run_workers.py
    depends_on:
      - database-es
      - database-it
      - rabbitmq
      - redis
      - mailhog
      - mongo
      - mongo-express
    networks:
      web_corpus_builder:
        ipv4_address: 10.5.0.9

  rabbitmq:
    container_name: web-corpus-builder-rabbitmq
    hostname: rabbitmq-server
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    environment:
      - RABBITMQ_USER=admin
      - RABBITMQ_PASSWORD=yvPZ6j9n4ZyhXJV2
    networks:
      web_corpus_builder:
        ipv4_address: 10.5.0.5
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    container_name: web-corpus-builder-redis
    image: redis:alpine
    command: [ "redis-server", "--appendonly", "yes" ]
    hostname: redis
    networks:
      web_corpus_builder:
        ipv4_address: 10.5.0.4
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/redis-data

  mailhog:
    container_name: web-corpus-builder-mail
    image: mailhog/mailhog
    networks:
      web_corpus_builder:
        ipv4_address: 10.5.0.6
    ports:
      - "11025:1025"
      - "18025:8025"

  mongo:
    build:
      context: ./docker/mongodb
      dockerfile: Dockerfile
    image: mongo:5.0-focal
    container_name: web-corpus-builder-mongodb
    hostname: mongodb-server
    restart: always
    networks:
      web_corpus_builder:
        ipv4_address: 10.5.0.7
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=aC4tYp9RUSWwvc5g

  mongo-express:
    image: mongo-express:0.32
    container_name: web-corpus-builder-mongo-express
    restart: always
    networks:
      web_corpus_builder:
        ipv4_address: 10.5.0.8
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=aC4tYp9RUSWwvc5g
      - ME_CONFIG_MONGODB_URL=mongodb://root:aC4tYp9RUSWwvc5g@mongo:27017/

networks:
  web_corpus_builder:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1
