version: "3"

services:
  database:
    build:
      context: ../services/mysql
      dockerfile: Dockerfile
    image: mysql-server:latest
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - nlp_net

  application:
    build:
      context: ../..
      dockerfile: docker/services/application/Dockerfile
    depends_on:
      - database
      - rabbitmq
      - redis
      - mailhog
      - mongo
      - mongo-express
    volumes:
      - ../../src:/var/www/src
      - ../../tests:/var/www/tests
      - ../../config:/var/www/config
      - ../../export:/export
      - ../../log:/log
      - ../../bin:/var/www/bin
      - ../../resources/data/content:/var/www/data/content
    environment:
      - FLASK_APP=shared/infrastructure/flask/entrypoint/run.py
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    command: flask run -h 0.0.0.0 -p 5000
    networks:
      - nlp_net

  worker:
    build:
      context: ../..
      dockerfile: docker/services/application/Dockerfile
    command: /var/www/bin/run_workers.py
    depends_on:
      - rabbitmq
      - redis
      - mailhog
      - mongo
      - mongo-express
    networks:
      - nlp_net

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    networks:
      - nlp_net

  redis:
    image: redis:alpine
    command: [ "redis-server", "--appendonly", "yes" ]
    networks:
      - nlp_net

  mailhog:
    image: mailhog/mailhog
    networks:
      - nlp_net

  mongo:
    build:
      context: ../services/mongodb
      dockerfile: Dockerfile
    image: mongo:5.0-focal
    restart: always
    networks:
      - nlp_net

  mongo-express:
    image: mongo-express:0.32
    restart: always
    networks:
      - nlp_net

  static-analysis:
    build:
      context: ../..
      dockerfile: docker/services/application/Dockerfile
    entrypoint: pylint .

networks:
  nlp_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1
